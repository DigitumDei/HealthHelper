// <auto-generated />
using System;
using HealthHelper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthHelper.Migrations
{
    [DbContext(typeof(HealthHelperDbContext))]
    [Migration("20251010220000_AddCapturedAtTimeZoneMetadata")]
    partial class AddCapturedAtTimeZoneMetadata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("HealthHelper.Models.DailySummary", b =>
                {
                    b.Property<int>("SummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ExternalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Highlights")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Recommendations")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SummaryDate")
                        .HasColumnType("TEXT");

                    b.HasKey("SummaryId");

                    b.ToTable("DailySummaries");
                });

            modelBuilder.Entity("HealthHelper.Models.DailySummaryEntryAnalyses", b =>
                {
                    b.Property<int>("SummaryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnalysisId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SummaryId", "AnalysisId");

                    b.ToTable("DailySummaryEntryAnalyses");
                });

            modelBuilder.Entity("HealthHelper.Models.EntryAnalysis", b =>
                {
                    b.Property<int>("AnalysisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CapturedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("EntryId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("ExternalId")
                        .HasColumnType("TEXT");

                    b.Property<string>("InsightsJson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AnalysisId");

                    b.HasIndex("EntryId");

                    b.ToTable("EntryAnalyses");
                });

            modelBuilder.Entity("HealthHelper.Models.TrackedEntry", b =>
                {
                    b.Property<int>("EntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BlobPath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CapturedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CapturedAtOffsetMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CapturedAtTimeZoneId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DataPayload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DataSchemaVersion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntryType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ExternalId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcessingStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("EntryId");

                    b.ToTable("TrackedEntries");
                });

            modelBuilder.Entity("HealthHelper.Models.EntryAnalysis", b =>
                {
                    b.HasOne("HealthHelper.Models.TrackedEntry", null)
                        .WithMany()
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
